package ModuleFrames;

import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.Connection;
import java.sql.SQLException;
import net.proteanit.sql.DbUtils;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import utils.userDao;

/**
@author Dilip Pc
 */

public class StoreJFrame extends javax.swing.JFrame {

    ResultSet rs = null;       
    PreparedStatement pst=null;
    private Connection con;
    public StoreJFrame() {
        initComponents();
        con=userDao.getConnection();
        getStoreData();
    }
    
           
private void getStoreData()
{
    try
            {
                String sql = "select InvoiceNumber,ProductName,SerialNumber,Amount,Due,Quantity,OrderedBy_StaffId,Date_Of_Order,Date_Of_Delivery from store";
                pst = con.prepareStatement(sql);               
                rs = pst.executeQuery();                
                tableStore.setModel(DbUtils.resultSetToTableModel(rs));
                
            }
            catch (Exception e)
            {
                System.err.println("Error while fetching store data!!!!"+e.getMessage());
                System.out.println("Error while fetching store data!!!!"+e.getMessage());           
            }
            finally
            {
                try {
                    rs.close();
                    pst.close();
                } 
                catch (SQLException ex) 
                {
                    
                     System.err.println("SQL EXCEPTION"+ex.getMessage());
                    
                }
            }
    
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label_StoreHeading = new javax.swing.JLabel();
        label_InvoiceNumber = new javax.swing.JLabel();
        label_ProductName = new javax.swing.JLabel();
        label_SerialNumber = new javax.swing.JLabel();
        label_Amount = new javax.swing.JLabel();
        label_Due = new javax.swing.JLabel();
        label_Quantity = new javax.swing.JLabel();
        label_OrderBy = new javax.swing.JLabel();
        label_DateOfOrder = new javax.swing.JLabel();
        label_DateOfDelivery = new javax.swing.JLabel();
        txt_InvoiceNumber = new javax.swing.JTextField();
        txt_ProductName = new javax.swing.JTextField();
        txt_SerialNumber = new javax.swing.JTextField();
        txt_Amount = new javax.swing.JTextField();
        txt_Due = new javax.swing.JTextField();
        txt_Quantity = new javax.swing.JTextField();
        txt_OrderBy = new javax.swing.JTextField();
        jDate_Order = new com.toedter.calendar.JDateChooser();
        jDate_Delivery = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        txt_OrderFile = new javax.swing.JTextField();
        btn_Update = new javax.swing.JButton();
        btn_Enter = new javax.swing.JButton();
        btn_Upload = new javax.swing.JButton();
        btn_Refresh = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableStore = new javax.swing.JTable();
        label_MainFrame = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Store Module Frame");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        getContentPane().setLayout(null);

        label_StoreHeading.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        label_StoreHeading.setForeground(new java.awt.Color(255, 255, 255));
        label_StoreHeading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_StoreHeading.setText("Store Module");
        getContentPane().add(label_StoreHeading);
        label_StoreHeading.setBounds(460, 20, 200, 60);

        label_InvoiceNumber.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label_InvoiceNumber.setForeground(new java.awt.Color(255, 255, 255));
        label_InvoiceNumber.setText("Invoice Number");
        getContentPane().add(label_InvoiceNumber);
        label_InvoiceNumber.setBounds(10, 100, 110, 20);

        label_ProductName.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label_ProductName.setForeground(new java.awt.Color(255, 255, 255));
        label_ProductName.setText("Product Name");
        getContentPane().add(label_ProductName);
        label_ProductName.setBounds(10, 140, 110, 20);

        label_SerialNumber.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label_SerialNumber.setForeground(new java.awt.Color(255, 255, 255));
        label_SerialNumber.setText("Serial Number");
        getContentPane().add(label_SerialNumber);
        label_SerialNumber.setBounds(10, 180, 110, 20);

        label_Amount.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label_Amount.setForeground(new java.awt.Color(255, 255, 255));
        label_Amount.setText("Amount");
        getContentPane().add(label_Amount);
        label_Amount.setBounds(10, 220, 110, 20);

        label_Due.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label_Due.setForeground(new java.awt.Color(255, 255, 255));
        label_Due.setText("Due");
        getContentPane().add(label_Due);
        label_Due.setBounds(10, 260, 110, 20);

        label_Quantity.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label_Quantity.setForeground(new java.awt.Color(255, 255, 255));
        label_Quantity.setText("Quantity");
        getContentPane().add(label_Quantity);
        label_Quantity.setBounds(10, 300, 110, 20);
        label_Quantity.getAccessibleContext().setAccessibleName("label_Quantitiy");

        label_OrderBy.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label_OrderBy.setForeground(new java.awt.Color(255, 255, 255));
        label_OrderBy.setText("Order By Staff ID");
        getContentPane().add(label_OrderBy);
        label_OrderBy.setBounds(10, 340, 130, 20);

        label_DateOfOrder.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label_DateOfOrder.setForeground(new java.awt.Color(255, 255, 255));
        label_DateOfOrder.setText("Date of Order");
        getContentPane().add(label_DateOfOrder);
        label_DateOfOrder.setBounds(10, 380, 110, 20);

        label_DateOfDelivery.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label_DateOfDelivery.setForeground(new java.awt.Color(255, 255, 255));
        label_DateOfDelivery.setText("Date of Delivery");
        getContentPane().add(label_DateOfDelivery);
        label_DateOfDelivery.setBounds(10, 420, 130, 20);
        getContentPane().add(txt_InvoiceNumber);
        txt_InvoiceNumber.setBounds(150, 100, 110, 20);
        getContentPane().add(txt_ProductName);
        txt_ProductName.setBounds(150, 140, 110, 20);
        getContentPane().add(txt_SerialNumber);
        txt_SerialNumber.setBounds(150, 180, 110, 20);

        txt_Amount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_AmountKeyTyped(evt);
            }
        });
        getContentPane().add(txt_Amount);
        txt_Amount.setBounds(150, 220, 110, 20);

        txt_Due.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_DueKeyTyped(evt);
            }
        });
        getContentPane().add(txt_Due);
        txt_Due.setBounds(150, 260, 110, 20);

        txt_Quantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_QuantityKeyTyped(evt);
            }
        });
        getContentPane().add(txt_Quantity);
        txt_Quantity.setBounds(150, 300, 110, 20);
        getContentPane().add(txt_OrderBy);
        txt_OrderBy.setBounds(150, 340, 110, 20);
        getContentPane().add(jDate_Order);
        jDate_Order.setBounds(150, 380, 110, 20);
        getContentPane().add(jDate_Delivery);
        jDate_Delivery.setBounds(150, 420, 110, 20);

        jLabel1.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Order File");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 460, 130, 20);
        getContentPane().add(txt_OrderFile);
        txt_OrderFile.setBounds(150, 460, 210, 20);

        btn_Update.setText("UPDATE");
        btn_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_UpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btn_Update);
        btn_Update.setBounds(40, 510, 110, 30);

        btn_Enter.setText("ENTER");
        btn_Enter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_EnterActionPerformed(evt);
            }
        });
        getContentPane().add(btn_Enter);
        btn_Enter.setBounds(270, 100, 100, 23);

        btn_Upload.setText("browse");
        btn_Upload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_UploadActionPerformed(evt);
            }
        });
        getContentPane().add(btn_Upload);
        btn_Upload.setBounds(370, 460, 120, 20);

        btn_Refresh.setText("REFRESH");
        btn_Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_RefreshActionPerformed(evt);
            }
        });
        getContentPane().add(btn_Refresh);
        btn_Refresh.setBounds(170, 510, 110, 30);

        tableStore.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableStore.setMaximumSize(new java.awt.Dimension(120, 64));
        tableStore.setPreferredSize(new java.awt.Dimension(120, 64));
        tableStore.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableStoreMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableStore);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(380, 100, 820, 100);

        label_MainFrame.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/loginbg.jpg"))); // NOI18N
        getContentPane().add(label_MainFrame);
        label_MainFrame.setBounds(0, 0, 1210, 560);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
       
         setSize(1220, 600);
         setLocation(100, 100);
    }//GEN-LAST:event_formComponentResized

    private void tableStoreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableStoreMouseClicked
          try
       {
            int row = tableStore.getSelectedRow();
            String Table_Click = (tableStore.getModel().getValueAt(row, 0).toString());
            String sql = " select * from store where InvoiceNumber = '"+Table_Click+"'";
            pst = con.prepareStatement (sql);
	    rs=pst.executeQuery(sql);
            if(rs.next())
            {
               String invoiceNo = rs.getString("InvoiceNumber");
               txt_InvoiceNumber.setText(invoiceNo);  
               
               String serialNo = rs.getString("SerialNumber");
               txt_SerialNumber.setText(serialNo);
               
               String productName = rs.getString("ProductName");
               txt_ProductName.setText(productName);  
               
               String amount = rs.getInt("Amount")+"";
               txt_Amount.setText(amount); 
               
               String due = rs.getInt("Due")+"";
               txt_Due.setText(due); 
               
               String quatity = rs.getInt("Quantity")+"";
               txt_Quantity.setText(quatity);
               
               String orderBy = rs.getString("OrderedBy_StaffId");
               txt_OrderBy.setText(orderBy);
               
               java.util.Date dateOrder = rs.getDate("Date_Of_Order") ;
               jDate_Order.setDate(dateOrder); 
                              
               java.util.Date dateDelivery = rs.getDate("Date_Of_Delivery") ;
               jDate_Delivery.setDate(dateDelivery);
                         
         }
                  
       }
       catch (Exception e)
       {
           System.err.println( new Date().toString()+"::Not Connected!!!!"+e.getMessage());
           
       }
         finally
            {
                try {
                    rs.close();
                    pst.close();
                } 
                catch (SQLException ex) {
                    System.err.println( new Date().toString()+"::SQL EXCEPTION"+ex.getMessage());
                   
                }
            }
    }//GEN-LAST:event_tableStoreMouseClicked

    private void txt_AmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_AmountKeyTyped
       char c = evt.getKeyChar();
          if(!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))){
              evt.consume();
          }
    }//GEN-LAST:event_txt_AmountKeyTyped

    private void txt_DueKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_DueKeyTyped
        char c = evt.getKeyChar();
          if(!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))){
              evt.consume();
          }
    }//GEN-LAST:event_txt_DueKeyTyped

    private void txt_QuantityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_QuantityKeyTyped
        char c = evt.getKeyChar();
          if(!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))){
              evt.consume();
          }
    }//GEN-LAST:event_txt_QuantityKeyTyped

    private void btn_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_UpdateActionPerformed
         try
       {
                    
            String invoiceNo =  txt_InvoiceNumber.getText();             
            String prodName  =  txt_ProductName.getText();
            String serialNo  =  txt_SerialNumber.getText();
            String amount    =  txt_Amount.getText();
            String due       =  txt_Due.getText();
            String quantity  =  txt_Quantity.getText();
            String orderBy   =  txt_OrderBy.getText();
            Date orderDate   =  jDate_Order.getDate();
            Date deliveryDate =  jDate_Delivery.getDate();
            String orderFilePath = txt_OrderFile.getText();
            
            DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
            String orderDateFinal = dateFormat.format(orderDate).toString();
            String deliveryDateFinal = dateFormat.format(deliveryDate).toString();
            
            
            String sql = "update store set ProductName = '"+prodName+"' , SerialNumber = '"+serialNo+"' , Amount = '"+amount+"', Due = '"+due+"', Quantity = '"+quantity+"' , OrderedBy_StaffId = '"+orderBy+"', Date_Of_Order = '"+orderDateFinal+"' , Date_Of_Delivery = '"+deliveryDateFinal+"' , OrderFile = '"+orderFilePath+"'  where InvoiceNumber = '"+invoiceNo+"'";
            pst = con.prepareStatement(sql);
            pst.execute();
            System.err.println( new Date().toString()+"::Update Query!!!!"+sql);
            
            JOptionPane.showMessageDialog(null,"Detials Updated");
                  
       }
       catch (Exception e)
       {
           System.err.println( new Date().toString()+"::Not Connected UPDATION!!!!"+e.getMessage());
                    
       }
            finally
            {
                try {
                    rs.close();
                    pst.close();
                } 
                catch (SQLException ex) {
                    System.err.println( new Date().toString()+"::SQL EXCEPTION"+ex.getMessage());
                    
                }
            }
       getStoreData();
    }//GEN-LAST:event_btn_UpdateActionPerformed

    private void btn_RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_RefreshActionPerformed
        txt_InvoiceNumber.setText("");             
        txt_ProductName.setText("");
        txt_SerialNumber.setText("");
        txt_Amount.setText("");
        txt_Due.setText("");
        txt_Quantity.setText("");
        txt_OrderBy.setText(""); 
    }//GEN-LAST:event_btn_RefreshActionPerformed

    private void btn_EnterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_EnterActionPerformed
            try
       {
            String invoiceNo = txt_InvoiceNumber.getText();
            String sql = " select * from store where InvoiceNumber = '"+invoiceNo+"'";
            pst = con.prepareStatement (sql);
	    rs=pst.executeQuery(sql);
            if(rs.next())
            {
                 
               
               String serialNo = rs.getString("SerialNumber");
               txt_SerialNumber.setText(serialNo);
               
               String productName = rs.getString("ProductName");
               txt_ProductName.setText(productName);  
               
               String amount = rs.getInt("Amount")+"";
               txt_Amount.setText(amount); 
               
               String due = rs.getInt("Due")+"";
               txt_Due.setText(due); 
               
               String quatity = rs.getInt("Quantity")+"";
               txt_Quantity.setText(quatity);
               
               String orderBy = rs.getString("OrderedBy_StaffId");
               txt_OrderBy.setText(orderBy);
               
               java.util.Date dateOrder = rs.getDate("Date_Of_Order") ;
               jDate_Order.setDate(dateOrder); 
                              
               java.util.Date dateDelivery = rs.getDate("Date_Of_Delivery") ;
               jDate_Delivery.setDate(dateDelivery);
                         
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Invoice number is incorrect !");
            }
                  
       }
       catch (Exception e)
       {
           System.err.println( new Date().toString()+"::Not Connected!!!!"+e.getMessage());
           
       }
         finally
            {
                try {
                    rs.close();
                    pst.close();
                } 
                catch (SQLException ex) {
                    System.err.println( new Date().toString()+"::SQL EXCEPTION"+ex.getMessage());
                   
                }
            }
    }//GEN-LAST:event_btn_EnterActionPerformed

    private void btn_UploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_UploadActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        String filename = f.getAbsolutePath();
        txt_OrderFile.setText(filename);
        
    }//GEN-LAST:event_btn_UploadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StoreJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StoreJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StoreJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StoreJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StoreJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Enter;
    private javax.swing.JButton btn_Refresh;
    private javax.swing.JButton btn_Update;
    private javax.swing.JButton btn_Upload;
    private com.toedter.calendar.JDateChooser jDate_Delivery;
    private com.toedter.calendar.JDateChooser jDate_Order;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label_Amount;
    private javax.swing.JLabel label_DateOfDelivery;
    private javax.swing.JLabel label_DateOfOrder;
    private javax.swing.JLabel label_Due;
    private javax.swing.JLabel label_InvoiceNumber;
    private javax.swing.JLabel label_MainFrame;
    private javax.swing.JLabel label_OrderBy;
    private javax.swing.JLabel label_ProductName;
    private javax.swing.JLabel label_Quantity;
    private javax.swing.JLabel label_SerialNumber;
    private javax.swing.JLabel label_StoreHeading;
    private javax.swing.JTable tableStore;
    private javax.swing.JTextField txt_Amount;
    private javax.swing.JTextField txt_Due;
    private javax.swing.JTextField txt_InvoiceNumber;
    private javax.swing.JTextField txt_OrderBy;
    private javax.swing.JTextField txt_OrderFile;
    private javax.swing.JTextField txt_ProductName;
    private javax.swing.JTextField txt_Quantity;
    private javax.swing.JTextField txt_SerialNumber;
    // End of variables declaration//GEN-END:variables
}
