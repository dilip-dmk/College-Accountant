package ModuleFrames;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import utils.userDao;

/**
@author Dilip Pc
 */

public class MessJFrame extends javax.swing.JFrame {

    ResultSet rs = null;       
    PreparedStatement pst=null;
    private Connection con;
    public MessJFrame() {
        initComponents();
        con=userDao.getConnection();
        getMessData();
    }
    
      private void getMessData()
{
    try
            {
                String sql = "select * from mess";
                pst = con.prepareStatement(sql);               
                rs = pst.executeQuery();                
                table_Mess.setModel(DbUtils.resultSetToTableModel(rs));
                
            }
            catch (Exception e)
            {
                System.err.println( new Date().toString()+"::Error while fetching Doantion data!!!!"+e.getMessage());
                
            }
            finally
            {
                try {
                    rs.close();
                    pst.close();
                } 
                catch (SQLException ex) {
                    
                     System.err.println( new Date().toString()+"::SQL EXCEPTION"+ex.getMessage());
                    
                }
            }
    
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label_MessHeading = new javax.swing.JLabel();
        label_StudentID = new javax.swing.JLabel();
        label_MessFee = new javax.swing.JLabel();
        label_StaffMessFee = new javax.swing.JLabel();
        label_MessRent = new javax.swing.JLabel();
        label_UtensitsCost = new javax.swing.JLabel();
        label_MonthlyCost = new javax.swing.JLabel();
        label_MessElectricity = new javax.swing.JLabel();
        label_MessWater = new javax.swing.JLabel();
        label_CafeRent = new javax.swing.JLabel();
        label_CafeElectricity = new javax.swing.JLabel();
        label_CafeWater = new javax.swing.JLabel();
        txt_studentID = new javax.swing.JTextField();
        txt_MessFeeDue = new javax.swing.JTextField();
        txt_StaffMessFee = new javax.swing.JTextField();
        txt_MessRent = new javax.swing.JTextField();
        txt_utensilsCost = new javax.swing.JTextField();
        txt_MonthlyCost = new javax.swing.JTextField();
        txt_MessElectricityPayable = new javax.swing.JTextField();
        txt_MessWaterPayable = new javax.swing.JTextField();
        txt_CafeRent = new javax.swing.JTextField();
        txt_CafeElectricityPayable = new javax.swing.JTextField();
        txt_CafeWaterPayable = new javax.swing.JTextField();
        btn_Update = new javax.swing.JButton();
        btn_Enter = new javax.swing.JButton();
        btn_Refresh = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_Mess = new javax.swing.JTable();
        lable_MainFrame = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Mess/Cafe Module Frame");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        getContentPane().setLayout(null);

        label_MessHeading.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        label_MessHeading.setForeground(new java.awt.Color(255, 255, 255));
        label_MessHeading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_MessHeading.setText("Mess Cafeteria");
        getContentPane().add(label_MessHeading);
        label_MessHeading.setBounds(510, 40, 220, 40);

        label_StudentID.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label_StudentID.setForeground(new java.awt.Color(255, 255, 255));
        label_StudentID.setText("Student ID");
        getContentPane().add(label_StudentID);
        label_StudentID.setBounds(20, 110, 110, 20);

        label_MessFee.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label_MessFee.setForeground(new java.awt.Color(255, 255, 255));
        label_MessFee.setText("Mess Fee Due");
        getContentPane().add(label_MessFee);
        label_MessFee.setBounds(20, 140, 110, 20);

        label_StaffMessFee.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label_StaffMessFee.setForeground(new java.awt.Color(255, 255, 255));
        label_StaffMessFee.setText("Staff Mess Fee");
        getContentPane().add(label_StaffMessFee);
        label_StaffMessFee.setBounds(20, 170, 110, 20);

        label_MessRent.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label_MessRent.setForeground(new java.awt.Color(255, 255, 255));
        label_MessRent.setText("Mess Rent");
        getContentPane().add(label_MessRent);
        label_MessRent.setBounds(20, 200, 110, 20);

        label_UtensitsCost.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label_UtensitsCost.setForeground(new java.awt.Color(255, 255, 255));
        label_UtensitsCost.setText("Utensils Cost");
        getContentPane().add(label_UtensitsCost);
        label_UtensitsCost.setBounds(20, 230, 110, 20);

        label_MonthlyCost.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label_MonthlyCost.setForeground(new java.awt.Color(255, 255, 255));
        label_MonthlyCost.setText("Monthly Cost");
        getContentPane().add(label_MonthlyCost);
        label_MonthlyCost.setBounds(20, 260, 110, 20);

        label_MessElectricity.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label_MessElectricity.setForeground(new java.awt.Color(255, 255, 255));
        label_MessElectricity.setText("Mess Electricity Payable");
        getContentPane().add(label_MessElectricity);
        label_MessElectricity.setBounds(20, 290, 170, 20);

        label_MessWater.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label_MessWater.setForeground(new java.awt.Color(255, 255, 255));
        label_MessWater.setText("Mess Water Payable");
        getContentPane().add(label_MessWater);
        label_MessWater.setBounds(20, 320, 140, 20);

        label_CafeRent.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label_CafeRent.setForeground(new java.awt.Color(255, 255, 255));
        label_CafeRent.setText("Cafe Rent");
        getContentPane().add(label_CafeRent);
        label_CafeRent.setBounds(20, 350, 110, 20);

        label_CafeElectricity.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label_CafeElectricity.setForeground(new java.awt.Color(255, 255, 255));
        label_CafeElectricity.setText("Cafe Electricity Payable");
        getContentPane().add(label_CafeElectricity);
        label_CafeElectricity.setBounds(20, 380, 180, 20);

        label_CafeWater.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label_CafeWater.setForeground(new java.awt.Color(255, 255, 255));
        label_CafeWater.setText("Cafe Water Payable");
        getContentPane().add(label_CafeWater);
        label_CafeWater.setBounds(20, 410, 150, 20);
        getContentPane().add(txt_studentID);
        txt_studentID.setBounds(210, 110, 110, 20);

        txt_MessFeeDue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_MessFeeDueKeyTyped(evt);
            }
        });
        getContentPane().add(txt_MessFeeDue);
        txt_MessFeeDue.setBounds(210, 140, 110, 20);

        txt_StaffMessFee.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_StaffMessFeeKeyTyped(evt);
            }
        });
        getContentPane().add(txt_StaffMessFee);
        txt_StaffMessFee.setBounds(210, 170, 110, 20);

        txt_MessRent.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_MessRentKeyTyped(evt);
            }
        });
        getContentPane().add(txt_MessRent);
        txt_MessRent.setBounds(210, 200, 110, 20);

        txt_utensilsCost.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_utensilsCostKeyTyped(evt);
            }
        });
        getContentPane().add(txt_utensilsCost);
        txt_utensilsCost.setBounds(210, 230, 110, 20);

        txt_MonthlyCost.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_MonthlyCostKeyTyped(evt);
            }
        });
        getContentPane().add(txt_MonthlyCost);
        txt_MonthlyCost.setBounds(210, 260, 110, 20);

        txt_MessElectricityPayable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_MessElectricityPayableKeyTyped(evt);
            }
        });
        getContentPane().add(txt_MessElectricityPayable);
        txt_MessElectricityPayable.setBounds(210, 290, 110, 20);

        txt_MessWaterPayable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_MessWaterPayableKeyTyped(evt);
            }
        });
        getContentPane().add(txt_MessWaterPayable);
        txt_MessWaterPayable.setBounds(210, 320, 110, 20);

        txt_CafeRent.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_CafeRentKeyTyped(evt);
            }
        });
        getContentPane().add(txt_CafeRent);
        txt_CafeRent.setBounds(210, 350, 110, 20);

        txt_CafeElectricityPayable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_CafeElectricityPayableKeyTyped(evt);
            }
        });
        getContentPane().add(txt_CafeElectricityPayable);
        txt_CafeElectricityPayable.setBounds(210, 380, 110, 20);

        txt_CafeWaterPayable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_CafeWaterPayableKeyTyped(evt);
            }
        });
        getContentPane().add(txt_CafeWaterPayable);
        txt_CafeWaterPayable.setBounds(210, 410, 110, 20);

        btn_Update.setText("UPDATE");
        btn_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_UpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btn_Update);
        btn_Update.setBounds(60, 470, 110, 30);

        btn_Enter.setText("Enter");
        btn_Enter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_EnterActionPerformed(evt);
            }
        });
        getContentPane().add(btn_Enter);
        btn_Enter.setBounds(333, 110, 90, 23);

        btn_Refresh.setText("REFRESH");
        btn_Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_RefreshActionPerformed(evt);
            }
        });
        getContentPane().add(btn_Refresh);
        btn_Refresh.setBounds(210, 470, 110, 30);

        table_Mess.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table_Mess.setMaximumSize(new java.awt.Dimension(200, 64));
        table_Mess.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_MessMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_Mess);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(440, 110, 810, 100);

        lable_MainFrame.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/loginbg.jpg"))); // NOI18N
        getContentPane().add(lable_MainFrame);
        lable_MainFrame.setBounds(0, 0, 1270, 530);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        setSize(1270, 550);
        setLocation(100, 100);
    }//GEN-LAST:event_formComponentResized

    private void table_MessMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_MessMouseClicked
          try
          {
            int row = table_Mess.getSelectedRow();
            String Table_Click = (table_Mess.getModel().getValueAt(row, 0).toString());
            String sql = " select * from mess where StudentID = '"+Table_Click+"'";
            pst = con.prepareStatement (sql);
	    rs=pst.executeQuery(sql);
            if(rs.next())
            {
               String studID = rs.getString("StudentID");
               txt_studentID.setText(studID);  
               
               String messFee = rs.getDouble("MessFeeDue")+"";
               txt_MessFeeDue.setText(messFee);
               
               String staffMessFeeDue = rs.getDouble("StaffedMessFeeDue")+"";
               txt_StaffMessFee.setText(staffMessFeeDue);  
               
               String messRent = rs.getDouble("MessRent")+"";
               txt_MessRent.setText(messRent); 
               
               String utensilsCost = rs.getDouble("UtensilsCost")+"";
               txt_utensilsCost.setText(utensilsCost);   
               
               String monthlyCost = rs.getDouble("MonthlyCost")+"";
               txt_MonthlyCost.setText(monthlyCost);
               
               String messElectricityPayable = rs.getDouble("MessElectricityPayable")+"";
               txt_MessElectricityPayable.setText(messElectricityPayable);
               
               String messWaterPayable = rs.getDouble("MessWaterPayable")+"";
               txt_MessWaterPayable.setText(messWaterPayable);  
               
               String cafeRent = rs.getDouble("CafeRent")+"";
               txt_CafeRent.setText(cafeRent); 
               
               String cafeElectricityPayable = rs.getDouble("CafeElectricityPayable")+"";
               txt_CafeElectricityPayable.setText(cafeElectricityPayable);   
               
               String cafeWaterPayable = rs.getDouble("CafeWaterPayable")+"";
               txt_CafeWaterPayable.setText(cafeWaterPayable); 
           
         }
                  
       }
       catch (Exception e)
       {
           System.err.println( new Date().toString()+"::Not Connected!!!!"+e.getMessage());
           
       }
         finally
            {
                try {
                    rs.close();
                    pst.close();
                } 
                catch (SQLException ex) {
                    System.err.println( new Date().toString()+"::SQL EXCEPTION"+ex.getMessage());
                   
                }
            }
    }//GEN-LAST:event_table_MessMouseClicked

    private void btn_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_UpdateActionPerformed
        try
       {
                    
            String studentID  =  txt_studentID.getText();             
            String messFeeDue =  txt_MessFeeDue.getText();
            String staffedMessFeeDue =  txt_StaffMessFee.getText();
            String messRent         =  txt_MessRent.getText();
            String utensilsCost  =  txt_utensilsCost.getText();
            String monthlyCost  = txt_MonthlyCost.getText();
            String messElectricityPayable = txt_MessElectricityPayable.getText();
            String messWaterPayable     = txt_MessWaterPayable.getText();
            String cafeRent   =  txt_CafeRent.getText();
            String cafeElectricityPayable  = txt_CafeElectricityPayable.getText();
            String cafeWaterPayable  = txt_CafeWaterPayable.getText();
            
            String sql = "update mess set MessFeeDue = '"+messFeeDue+"', StaffedMessFeeDue = '"+staffedMessFeeDue+"' , MessRent = '"+messRent+"', UtensilsCost = '"+utensilsCost+"', MonthlyCost = '"+monthlyCost+"' , MessElectricityPayable = '"+messElectricityPayable+"', MessWaterPayable = '"+messWaterPayable+"', CafeRent = '"+cafeRent+"', CafeElectricityPayable = '"+cafeElectricityPayable+"', CafeWaterPayable = '"+cafeWaterPayable+"' where StudentID = '"+studentID+"'";
            pst = con.prepareStatement(sql);
            pst.execute();
            System.err.println( new Date().toString()+"::Update Query!!!!"+sql);
            
            JOptionPane.showMessageDialog(null,"Detials Updated");
                  
       }
       catch (Exception e)
       {
           System.err.println( new Date().toString()+"::Not Connected UPDATION!!!!"+e.getMessage());
                    
       }
            finally
            {
                try {
                    rs.close();
                    pst.close();
                } 
                catch (SQLException ex) {
                    System.err.println( new Date().toString()+"::SQL EXCEPTION"+ex.getMessage());
                    
                }
            }
       getMessData();
    }//GEN-LAST:event_btn_UpdateActionPerformed

    private void btn_RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_RefreshActionPerformed
        
        txt_studentID.setText("");             
        txt_MessFeeDue.setText("");
        txt_StaffMessFee.setText("");
        txt_MessRent.setText("");
        txt_utensilsCost.setText("");
        txt_MonthlyCost.setText("");
        txt_MessElectricityPayable.setText("");
        txt_MessWaterPayable.setText("");
        txt_CafeRent.setText("");
        txt_CafeElectricityPayable.setText("");
        txt_CafeWaterPayable.setText("");
    }//GEN-LAST:event_btn_RefreshActionPerformed

    private void txt_MessFeeDueKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_MessFeeDueKeyTyped
         char c = evt.getKeyChar();
          if(!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))){
              evt.consume();
          }
    }//GEN-LAST:event_txt_MessFeeDueKeyTyped

    private void txt_StaffMessFeeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_StaffMessFeeKeyTyped
         char c = evt.getKeyChar();
          if(!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))){
              evt.consume();
          }
    }//GEN-LAST:event_txt_StaffMessFeeKeyTyped

    private void txt_MessRentKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_MessRentKeyTyped
        char c = evt.getKeyChar();
          if(!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))){
              evt.consume();
          }
    }//GEN-LAST:event_txt_MessRentKeyTyped

    private void txt_utensilsCostKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_utensilsCostKeyTyped
         char c = evt.getKeyChar();
          if(!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))){
              evt.consume();
          }
    }//GEN-LAST:event_txt_utensilsCostKeyTyped

    private void txt_MonthlyCostKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_MonthlyCostKeyTyped
         char c = evt.getKeyChar();
          if(!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))){
              evt.consume();
          }
    }//GEN-LAST:event_txt_MonthlyCostKeyTyped

    private void txt_MessElectricityPayableKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_MessElectricityPayableKeyTyped
         char c = evt.getKeyChar();
          if(!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))){
              evt.consume();
          }
    }//GEN-LAST:event_txt_MessElectricityPayableKeyTyped

    private void txt_MessWaterPayableKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_MessWaterPayableKeyTyped
         char c = evt.getKeyChar();
          if(!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))){
              evt.consume();
          }
    }//GEN-LAST:event_txt_MessWaterPayableKeyTyped

    private void txt_CafeRentKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_CafeRentKeyTyped
         char c = evt.getKeyChar();
          if(!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))){
              evt.consume();
          }
    }//GEN-LAST:event_txt_CafeRentKeyTyped

    private void txt_CafeElectricityPayableKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_CafeElectricityPayableKeyTyped
        char c = evt.getKeyChar();
          if(!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))){
              evt.consume();
          }
    }//GEN-LAST:event_txt_CafeElectricityPayableKeyTyped

    private void txt_CafeWaterPayableKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_CafeWaterPayableKeyTyped
         char c = evt.getKeyChar();
          if(!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))){
              evt.consume();
          }
    }//GEN-LAST:event_txt_CafeWaterPayableKeyTyped

    private void btn_EnterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_EnterActionPerformed
         try
          {
            String studID = txt_studentID.getText();
            String sql = " select * from mess where StudentID = '"+studID+"'";
            pst = con.prepareStatement (sql);
	    rs=pst.executeQuery(sql);
            if(rs.next())
            {
               String messFee = rs.getDouble("MessFeeDue")+"";
               txt_MessFeeDue.setText(messFee);
               
               String staffMessFeeDue = rs.getDouble("StaffedMessFeeDue")+"";
               txt_StaffMessFee.setText(staffMessFeeDue);  
               
               String messRent = rs.getDouble("MessRent")+"";
               txt_MessRent.setText(messRent); 
               
               String utensilsCost = rs.getDouble("UtensilsCost")+"";
               txt_utensilsCost.setText(utensilsCost);   
               
               String monthlyCost = rs.getDouble("MonthlyCost")+"";
               txt_MonthlyCost.setText(monthlyCost);
               
               String messElectricityPayable = rs.getDouble("MessElectricityPayable")+"";
               txt_MessElectricityPayable.setText(messElectricityPayable);
               
               String messWaterPayable = rs.getDouble("MessWaterPayable")+"";
               txt_MessWaterPayable.setText(messWaterPayable);  
               
               String cafeRent = rs.getDouble("CafeRent")+"";
               txt_CafeRent.setText(cafeRent); 
               
               String cafeElectricityPayable = rs.getDouble("CafeElectricityPayable")+"";
               txt_CafeElectricityPayable.setText(cafeElectricityPayable);   
               
               String cafeWaterPayable = rs.getDouble("CafeWaterPayable")+"";
               txt_CafeWaterPayable.setText(cafeWaterPayable); 
           
         }
            
            else
            {
                JOptionPane.showMessageDialog(null,"Staff ID Incorrect !");
            }
                  
       }
       catch (Exception e)
       {
           System.err.println( new Date().toString()+"::Not Connected!!!!"+e.getMessage());
           
       }
         finally
            {
                try {
                    rs.close();
                    pst.close();
                } 
                catch (SQLException ex) {
                    System.err.println( new Date().toString()+"::SQL EXCEPTION"+ex.getMessage());
                   
                }
            }
    }//GEN-LAST:event_btn_EnterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MessJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MessJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MessJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MessJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MessJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Enter;
    private javax.swing.JButton btn_Refresh;
    private javax.swing.JButton btn_Update;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label_CafeElectricity;
    private javax.swing.JLabel label_CafeRent;
    private javax.swing.JLabel label_CafeWater;
    private javax.swing.JLabel label_MessElectricity;
    private javax.swing.JLabel label_MessFee;
    private javax.swing.JLabel label_MessHeading;
    private javax.swing.JLabel label_MessRent;
    private javax.swing.JLabel label_MessWater;
    private javax.swing.JLabel label_MonthlyCost;
    private javax.swing.JLabel label_StaffMessFee;
    private javax.swing.JLabel label_StudentID;
    private javax.swing.JLabel label_UtensitsCost;
    private javax.swing.JLabel lable_MainFrame;
    private javax.swing.JTable table_Mess;
    private javax.swing.JTextField txt_CafeElectricityPayable;
    private javax.swing.JTextField txt_CafeRent;
    private javax.swing.JTextField txt_CafeWaterPayable;
    private javax.swing.JTextField txt_MessElectricityPayable;
    private javax.swing.JTextField txt_MessFeeDue;
    private javax.swing.JTextField txt_MessRent;
    private javax.swing.JTextField txt_MessWaterPayable;
    private javax.swing.JTextField txt_MonthlyCost;
    private javax.swing.JTextField txt_StaffMessFee;
    private javax.swing.JTextField txt_studentID;
    private javax.swing.JTextField txt_utensilsCost;
    // End of variables declaration//GEN-END:variables
}
