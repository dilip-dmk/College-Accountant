 package ModuleFrames;

import java.awt.event.KeyEvent;
import java.net.URLEncoder;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import java.util.*;
import utils.userDao;

/**
@author Dilip Pc
 */
 
public class ExaminationJFrame extends javax.swing.JFrame {

    ResultSet rs = null;       
    PreparedStatement pst=null;
    private Connection con;
    public ExaminationJFrame() {
        initComponents();
        con=userDao.getConnection();
        getExaminationData();
    }
   
private void getExaminationData()
{
            try
            {
                String sql = "select StudentID,AttendenceFee,AbsentFee,Amount,AttendencePercentage,InternalExamScores,ExternalExamScores,ExaminationFee from examination";
                pst = con.prepareStatement(sql);               
                rs = pst.executeQuery();
                table_Examination.setModel(DbUtils.resultSetToTableModel(rs));
                System.out.println( new Date().toString()+"::INSIDE Examination MODULE:::");
               // System.err.println( new Date().toString()+"::Student table Query:::"+sql);
            }
            catch (Exception e)
            {
                System.out.println( new Date().toString()+"::Not Connected getExamination!!!!"+e.getMessage());                         
            }
            finally
            {
                try {
                    rs.close();
                    pst.close();
                } 
                catch (SQLException ex) {
                    
                     System.err.println( new Date().toString()+"::SQL EXCEPTION"+ex.getMessage());
                    
                }
            }
    
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label_Heading = new javax.swing.JLabel();
        label_StudentID = new javax.swing.JLabel();
        label_attendenceFee = new javax.swing.JLabel();
        label_AbsentFee = new javax.swing.JLabel();
        label_Amount = new javax.swing.JLabel();
        label_AttendencePercentage = new javax.swing.JLabel();
        label_InternalExams = new javax.swing.JLabel();
        label_ExternalExam = new javax.swing.JLabel();
        label_ExaminationFee = new javax.swing.JLabel();
        txt_StudentID = new javax.swing.JTextField();
        txt_AttendenceFee = new javax.swing.JTextField();
        txt_AbsentFee = new javax.swing.JTextField();
        txt_Amount = new javax.swing.JTextField();
        txt_AttendencePercentage = new javax.swing.JTextField();
        txt_InternalExams = new javax.swing.JTextField();
        txt_ExternalExam = new javax.swing.JTextField();
        txt_Examination = new javax.swing.JTextField();
        btn_Update = new javax.swing.JButton();
        btn_Enter = new javax.swing.JButton();
        btn_Refresh = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_Examination = new javax.swing.JTable();
        label_LibraryMainFrame = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Examination Module Frame");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocationByPlatform(true);
        setMaximumSize(new java.awt.Dimension(1200, 900));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        getContentPane().setLayout(null);

        label_Heading.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        label_Heading.setForeground(new java.awt.Color(255, 255, 255));
        label_Heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_Heading.setText("Examination Fee Module");
        getContentPane().add(label_Heading);
        label_Heading.setBounds(460, 30, 350, 50);

        label_StudentID.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label_StudentID.setForeground(new java.awt.Color(255, 255, 255));
        label_StudentID.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        label_StudentID.setText("Student ID    ");
        getContentPane().add(label_StudentID);
        label_StudentID.setBounds(10, 140, 110, 20);

        label_attendenceFee.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label_attendenceFee.setForeground(new java.awt.Color(255, 255, 255));
        label_attendenceFee.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        label_attendenceFee.setText("Attendence Fee  ");
        getContentPane().add(label_attendenceFee);
        label_attendenceFee.setBounds(10, 180, 120, 20);

        label_AbsentFee.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label_AbsentFee.setForeground(new java.awt.Color(255, 255, 255));
        label_AbsentFee.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        label_AbsentFee.setText("Absent Fee    ");
        getContentPane().add(label_AbsentFee);
        label_AbsentFee.setBounds(10, 220, 110, 20);

        label_Amount.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label_Amount.setForeground(new java.awt.Color(255, 255, 255));
        label_Amount.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        label_Amount.setText("Amount          ");
        getContentPane().add(label_Amount);
        label_Amount.setBounds(10, 260, 120, 20);

        label_AttendencePercentage.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label_AttendencePercentage.setForeground(new java.awt.Color(255, 255, 255));
        label_AttendencePercentage.setText("Attendence Percentage");
        getContentPane().add(label_AttendencePercentage);
        label_AttendencePercentage.setBounds(10, 300, 150, 20);

        label_InternalExams.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label_InternalExams.setForeground(new java.awt.Color(255, 255, 255));
        label_InternalExams.setText("Internal Exams Scores");
        getContentPane().add(label_InternalExams);
        label_InternalExams.setBounds(10, 340, 160, 20);

        label_ExternalExam.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label_ExternalExam.setForeground(new java.awt.Color(255, 255, 255));
        label_ExternalExam.setText("Extenal Exam Scores");
        getContentPane().add(label_ExternalExam);
        label_ExternalExam.setBounds(10, 380, 150, 20);

        label_ExaminationFee.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label_ExaminationFee.setForeground(new java.awt.Color(255, 255, 255));
        label_ExaminationFee.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        label_ExaminationFee.setText("Examination Fee");
        getContentPane().add(label_ExaminationFee);
        label_ExaminationFee.setBounds(10, 420, 120, 20);

        txt_StudentID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_StudentIDActionPerformed(evt);
            }
        });
        getContentPane().add(txt_StudentID);
        txt_StudentID.setBounds(190, 140, 90, 20);

        txt_AttendenceFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_AttendenceFeeActionPerformed(evt);
            }
        });
        txt_AttendenceFee.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_AttendenceFeeKeyTyped(evt);
            }
        });
        getContentPane().add(txt_AttendenceFee);
        txt_AttendenceFee.setBounds(190, 180, 90, 20);

        txt_AbsentFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_AbsentFeeActionPerformed(evt);
            }
        });
        txt_AbsentFee.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_AbsentFeeKeyTyped(evt);
            }
        });
        getContentPane().add(txt_AbsentFee);
        txt_AbsentFee.setBounds(190, 220, 90, 20);

        txt_Amount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_AmountActionPerformed(evt);
            }
        });
        txt_Amount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_AmountKeyTyped(evt);
            }
        });
        getContentPane().add(txt_Amount);
        txt_Amount.setBounds(190, 260, 90, 20);

        txt_AttendencePercentage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_AttendencePercentageActionPerformed(evt);
            }
        });
        txt_AttendencePercentage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_AttendencePercentageKeyTyped(evt);
            }
        });
        getContentPane().add(txt_AttendencePercentage);
        txt_AttendencePercentage.setBounds(190, 300, 90, 20);

        txt_InternalExams.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_InternalExamsKeyTyped(evt);
            }
        });
        getContentPane().add(txt_InternalExams);
        txt_InternalExams.setBounds(190, 340, 90, 20);

        txt_ExternalExam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_ExternalExamActionPerformed(evt);
            }
        });
        txt_ExternalExam.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_ExternalExamKeyTyped(evt);
            }
        });
        getContentPane().add(txt_ExternalExam);
        txt_ExternalExam.setBounds(190, 380, 90, 20);

        txt_Examination.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_ExaminationActionPerformed(evt);
            }
        });
        txt_Examination.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_ExaminationKeyTyped(evt);
            }
        });
        getContentPane().add(txt_Examination);
        txt_Examination.setBounds(190, 420, 90, 20);

        btn_Update.setText("UPDATE");
        btn_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_UpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btn_Update);
        btn_Update.setBounds(30, 490, 130, 30);

        btn_Enter.setText("Enter");
        btn_Enter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_EnterActionPerformed(evt);
            }
        });
        getContentPane().add(btn_Enter);
        btn_Enter.setBounds(290, 140, 100, 23);

        btn_Refresh.setText("REFRESH");
        btn_Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_RefreshActionPerformed(evt);
            }
        });
        getContentPane().add(btn_Refresh);
        btn_Refresh.setBounds(190, 490, 130, 30);

        table_Examination.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_Examination.setMaximumSize(new java.awt.Dimension(200, 64));
        table_Examination.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_ExaminationMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_Examination);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(400, 140, 800, 120);

        label_LibraryMainFrame.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/loginbg.jpg"))); // NOI18N
        label_LibraryMainFrame.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                label_LibraryMainFrameComponentResized(evt);
            }
        });
        label_LibraryMainFrame.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                label_LibraryMainFrameComponentAdded(evt);
            }
        });
        getContentPane().add(label_LibraryMainFrame);
        label_LibraryMainFrame.setBounds(0, 0, 1660, 690);
        label_LibraryMainFrame.getAccessibleContext().setAccessibleName("Library Main Frame");

        getAccessibleContext().setAccessibleParent(label_LibraryMainFrame);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txt_StudentIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_StudentIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_StudentIDActionPerformed

    private void txt_AbsentFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_AbsentFeeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_AbsentFeeActionPerformed

    private void table_ExaminationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_ExaminationMouseClicked
        
         try
       {
            int row = table_Examination.getSelectedRow();
            String Table_Click = (table_Examination.getModel().getValueAt(row, 0).toString());
            String sql = " select * from examination where StudentID = '"+Table_Click+"'";
            pst = con.prepareStatement (sql);
	    rs=pst.executeQuery(sql);
            if(rs.next())
            {
               String studID = rs.getString("StudentID");
               txt_StudentID.setText(studID);            
           
               
               String attendenceFee = rs.getDouble("AttendenceFee")+"";
               txt_AttendenceFee.setText(attendenceFee);
               
               String AbsentFee = rs.getDouble("AbsentFee")+"";
               txt_AbsentFee.setText(AbsentFee);  
               
               String amount = rs.getDouble("Amount")+"";
               txt_Amount.setText(amount); 
               
               String attendencePercentage = rs.getDouble("AttendencePercentage")+"";
               txt_AttendencePercentage.setText(attendencePercentage);
               
               String intExamScore = rs.getDouble("InternalExamScores")+"";
               txt_InternalExams.setText(intExamScore);  
               
               String externalExamScore = rs.getDouble("ExternalExamScores")+"";
               txt_ExternalExam.setText(externalExamScore);
               
               String examFee = rs.getDouble("ExaminationFee")+"";
               txt_Examination.setText(examFee); 
           
         }
                  
       }
       catch (Exception e)
       {
           System.err.println( new Date().toString()+"::Not Connected!!!!"+e.getMessage());
           
       }
         finally
            {
                try {
                    rs.close();
                    pst.close();
                } 
                catch (SQLException ex) {
                    System.err.println( new Date().toString()+"::SQL EXCEPTION"+ex.getMessage());
                   
                }
            }
    }//GEN-LAST:event_table_ExaminationMouseClicked
/**/
    
    
    
     
    private void label_LibraryMainFrameComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_label_LibraryMainFrameComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_label_LibraryMainFrameComponentAdded

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        
        setSize(1270, 600);
        setLocation(30, 30);
         
    }//GEN-LAST:event_formComponentResized

    private void txt_AmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_AmountKeyTyped
        char c = evt.getKeyChar();
          if(!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))){
              evt.consume();
          }
    }//GEN-LAST:event_txt_AmountKeyTyped

    private void btn_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_UpdateActionPerformed
         try
       {
                    
            String studentID = txt_StudentID.getText();             
            String attendenceFee = txt_AttendenceFee.getText();
            String absentFee =  txt_AbsentFee.getText();            
            String amount  =  txt_Amount.getText();
            String attPercentage = txt_AttendencePercentage.getText();;
            String internalExams = txt_InternalExams.getText();
            String extExams  =  txt_ExternalExam.getText();
            String examinationFee = txt_Examination.getText();
            
            String sql = "update examination set AttendenceFee = '"+attendenceFee+"', AbsentFee = '"+absentFee+"' , Amount = '"+amount+"', AttendencePercentage = '"+attPercentage+"', InternalExamScores = '"+internalExams+"', ExternalExamScores = '"+extExams+"' , ExaminationFee = '"+examinationFee+"' where StudentID = '"+studentID+"'";
            pst = con.prepareStatement(sql);
            pst.execute();
            System.err.println( new Date().toString()+"::Update Query!!!!"+sql);
            JOptionPane.showMessageDialog(null,"Details Updated");
                  
       }
       catch (Exception e)
       {
           System.err.println( new Date().toString()+"::Not Connected UPDATION!!!!"+e.getMessage());
                    
       }
            finally
            {
                try {
                    rs.close();
                    pst.close();
                } 
                catch (SQLException ex) {
                    System.err.println( new Date().toString()+"::SQL EXCEPTION"+ex.getMessage());
                    
                }
            }
       getExaminationData();
    }//GEN-LAST:event_btn_UpdateActionPerformed

    private void label_LibraryMainFrameComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_label_LibraryMainFrameComponentResized
        setSize(1000, 800);
      //  setLocation(100, 100);
    }//GEN-LAST:event_label_LibraryMainFrameComponentResized

    private void txt_AttendenceFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_AttendenceFeeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_AttendenceFeeActionPerformed

    private void txt_AttendencePercentageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_AttendencePercentageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_AttendencePercentageActionPerformed

    private void txt_ExternalExamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_ExternalExamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_ExternalExamActionPerformed

    private void btn_RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_RefreshActionPerformed
        txt_StudentID.setText("");
        txt_AttendenceFee.setText("");
        txt_AbsentFee.setText("");
        txt_Amount.setText("");
        txt_AttendencePercentage.setText("");
        txt_InternalExams.setText("");
        txt_ExternalExam.setText("");
        txt_Examination.setText("");
    }//GEN-LAST:event_btn_RefreshActionPerformed

    private void txt_AmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_AmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_AmountActionPerformed

    private void txt_ExaminationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_ExaminationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_ExaminationActionPerformed

    private void txt_AttendenceFeeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_AttendenceFeeKeyTyped
        char c = evt.getKeyChar();
          if(!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))){
              evt.consume();
          }
    }//GEN-LAST:event_txt_AttendenceFeeKeyTyped

    private void txt_AbsentFeeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_AbsentFeeKeyTyped
         char c = evt.getKeyChar();
          if(!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))){
              evt.consume();
          }
    }//GEN-LAST:event_txt_AbsentFeeKeyTyped

    private void txt_AttendencePercentageKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_AttendencePercentageKeyTyped
        char c = evt.getKeyChar();
          if(!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))){
              evt.consume();
          }
    }//GEN-LAST:event_txt_AttendencePercentageKeyTyped

    private void txt_InternalExamsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_InternalExamsKeyTyped
        char c = evt.getKeyChar();
          if(!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))){
              evt.consume();
          }
    }//GEN-LAST:event_txt_InternalExamsKeyTyped

    private void txt_ExternalExamKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_ExternalExamKeyTyped
        char c = evt.getKeyChar();
          if(!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))){
              evt.consume();
          }
    }//GEN-LAST:event_txt_ExternalExamKeyTyped

    private void txt_ExaminationKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_ExaminationKeyTyped
       char c = evt.getKeyChar();
          if(!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))){
              evt.consume();
          }
    }//GEN-LAST:event_txt_ExaminationKeyTyped

    private void btn_EnterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_EnterActionPerformed
          try
       {
            String studID = txt_StudentID.getText();
            String sql = " select * from examination where StudentID = '"+studID+"'";
            pst = con.prepareStatement (sql);
	    rs=pst.executeQuery(sql);
            if(rs.next())
            {
                         
               String attendenceFee = rs.getDouble("AttendenceFee")+"";
               txt_AttendenceFee.setText(attendenceFee);
               
               String AbsentFee = rs.getDouble("AbsentFee")+"";
               txt_AbsentFee.setText(AbsentFee);  
               
               String amount = rs.getDouble("Amount")+"";
               txt_Amount.setText(amount); 
               
               String attendencePercentage = rs.getDouble("AttendencePercentage")+"";
               txt_AttendencePercentage.setText(attendencePercentage);
               
               String intExamScore = rs.getDouble("InternalExamScores")+"";
               txt_InternalExams.setText(intExamScore);  
               
               String externalExamScore = rs.getDouble("ExternalExamScores")+"";
               txt_ExternalExam.setText(externalExamScore);
               
               String examFee = rs.getDouble("ExaminationFee")+"";
               txt_Examination.setText(examFee); 
           
           }
            
            else
            {
                JOptionPane.showMessageDialog(null,"Student ID Incorrect !");
            }
                  
       }
       catch (Exception e)
       {
           System.err.println( new Date().toString()+"::Not Connected!!!!"+e.getMessage());
           
       }
         finally
            {
                try {
                    rs.close();
                    pst.close();
                } 
                catch (SQLException ex) {
                    System.err.println( new Date().toString()+"::SQL EXCEPTION"+ex.getMessage());
                   
                }
            }
    }//GEN-LAST:event_btn_EnterActionPerformed

         

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExaminationJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExaminationJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExaminationJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExaminationJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExaminationJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Enter;
    private javax.swing.JButton btn_Refresh;
    private javax.swing.JButton btn_Update;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label_AbsentFee;
    private javax.swing.JLabel label_Amount;
    private javax.swing.JLabel label_AttendencePercentage;
    private javax.swing.JLabel label_ExaminationFee;
    private javax.swing.JLabel label_ExternalExam;
    private javax.swing.JLabel label_Heading;
    private javax.swing.JLabel label_InternalExams;
    private javax.swing.JLabel label_LibraryMainFrame;
    private javax.swing.JLabel label_StudentID;
    private javax.swing.JLabel label_attendenceFee;
    private javax.swing.JTable table_Examination;
    private javax.swing.JTextField txt_AbsentFee;
    private javax.swing.JTextField txt_Amount;
    private javax.swing.JTextField txt_AttendenceFee;
    private javax.swing.JTextField txt_AttendencePercentage;
    private javax.swing.JTextField txt_Examination;
    private javax.swing.JTextField txt_ExternalExam;
    private javax.swing.JTextField txt_InternalExams;
    private javax.swing.JTextField txt_StudentID;
    // End of variables declaration//GEN-END:variables
}
